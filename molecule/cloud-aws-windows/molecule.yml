---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
driver:
  name: delegated
lint:
  name: yamllint
  options:
    config-file: .yamllint
platforms:
# - name: test-aws-Windows2012R2-jenkins-master
#   aws_image_id: ami-075a1811b5270e1b2
#   aws_region: us-east-1
#   instance_type: m5.large
#   profile_name: epmldi-instance-profile
#   vpc_subnet_id: subnet-05a2ef2b767afec50
#   assign_public_ip: false
#   spot_price: 0.14
#   aws_sec_group:
#     - default
#   wait_timeout: 1800
#   groups:
#     - windows
#  - name: test-aws-Windows2016-jenkins-master
#    aws_image_id: ami-0a125a00b5b736e77
#    aws_region: us-east-1
#    instance_type: m5.large
#    profile_name: epmldi-instance-profile
#    vpc_subnet_id: subnet-05a2ef2b767afec50
#    assign_public_ip: false
#    spot_price: 0.14
#    aws_sec_group:
#      - default
#      - epam-by-ru
#    wait_timeout: 1800
#    groups:
#      - windows
  - name: test-aws-Windows2019-jenkins-master
    aws_image_id: ami-03ad37b4adab50a4c
    aws_region: us-east-1
    instance_type: m5.large
    profile_name: epmldi-instance-profile
    vpc_subnet_id: subnet-05a2ef2b767afec50
    assign_public_ip: false
    spot_price: 0.14
    aws_sec_group:
      - default
      - epam-by-ru
    wait_timeout: 1800
    groups:
      - windows
provisioner:
  name: ansible
  log: true
  connection_options:
    ansible_connection: winrm
  inventory:
    group_vars:
      windows:
        ansible_password: "{{ lookup('env', 'WINRM_ADMIN_PWD') | default('M0leCule123!', true) }}"
        ansible_winrm_transport: credssp
        ansible_winrm_server_cert_validation: ignore
        jenkins2_inventory_ip: '{{ setup_facts.ansible_facts.ansible_ip_addresses[0] }}'
        jenkins2_home_directory: 'C:\Jenkins'
#      s3:
#        transport: s3
#        transport_s3_bucket: java-molecule-s3-test
#        transport_s3_path: /java/jdk-8u202-linux-x64.tar.gz
#        transport_s3_aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#        transport_s3_aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
#      local:
#        transport: local
#        transport_local: /tmp/jdk-8u202-windows-x64.exe
#        java_major_version: 8
#        java_minor_version: 202
  playbooks:
    create: ../resources/provisioning/WINRM/create.yml
#    prepare: ../cloud-aws-windows/prepare.yml
    destroy: ../resources/provisioning/WINRM/destroy.yml
  lint:
    name: ansible-lint
scenario:
  name: cloud-aws-windows
verifier:
  name: testinfra
  options:
    verbose: true
  directory: ../resources/tests/
  lint:
    name: flake8
