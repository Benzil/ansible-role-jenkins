---
- name: Create windows group
  win_group:
    name: "{{ jenkins2_user | default('jenkins') }}-users"
    state: present

- name: Create user
  win_user:
    name: "{{ jenkins2_user | default('jenkins') }}"
    password: '{{  jenkins2_user_default-pass  }}'
    state: present
    groups: "{{ jenkins2_user | default('jenkins') }}-users"

- name: grant the '{{ jenkins2_user }}' user the SeTcbPrivilege right
  win_user_right:
    name: SeTcbPrivilege
    users: "{{ jenkins2_user | default('jenkins') }}"
    action: add

- name: Create {{ jenkins2_home_directory }}
  win_file:
    path: '{{ jenkins2_home_directory }}\'
    state: directory

- name: Download 2.164.2 version
  win_get_url:
    url: "http://ftp.osuosl.org/pub/\
         jenkins/windows-stable/jenkins-2.164.2.zip"
    dest: '{{ jenkins2_home_directory }}\'

- name: UnZIP archiv
  win_unzip:
    src: '{{ jenkins2_home_directory }}\jenkins-2.164.2.zip'
    dest: '{{ jenkins2_home_directory }}\'
    delete_archive: True

- name: Jenkins installation
  win_package:
    path: '{{ jenkins2_home_directory }}\jenkins.msi'
    arguments: 'JENKINSDIR={{ jenkins2_home_directory }}'
    state: present
  register: jenkins_install_package_win
  retries: 15
  delay: 200
  until: jenkins_install_package_win is succeeded
  become: True
  become_method: runas
  become_user: "{{ jenkins2_user | default('jenkins') }}"

- name: Update to latest
  include_tasks: update_jenkins_windows.yml
  when: jenkins2_win_update

- name: Ensure Jenkins is started and runs on startup.
  win_service:
    name: jenkins
    state: started
    enabled: True

- name: Platform configuration
  include_tasks: '{{ platform }}'
  with_first_found:
    - configure/{{ ansible_os_family }}.yml
    - not-supported.yml
  loop_control:
    loop_var: platform

- name: SSL preparation
  include_tasks: '{{ platform }}'
  with_first_found:
    - ssl/{{ ansible_system }}.yml
    - not-supported.yml
  loop_control:
    loop_var: platform
  when:
    - jenkins2_ssl_configure

- include_tasks: '{{ jenkins2_install_type }}_installation/install_plugins.yml'
  when: jenkins_install_package_win is defined

- include_tasks: '{{ jenkins2_install_type }}_installation/configure_smtp.yml'
  when: jenkins2_smtp_enabled

- include_tasks: '{{ jenkins2_install_type }}_installation/set_credentials.yml'
  when: jenkins2_credentials_enabled

- include_tasks: '{{ jenkins2_install_type }}_installation/configure_pipeline_libraries.yml'
  when: jenkins2_pipeline_libraries_enabled

- include_tasks: '{{ jenkins2_install_type }}_installation/configure_bitbucket_project.yml'
  when: jenkins2_bitbucket_project_enabled

- include_tasks: '{{ jenkins2_install_type }}_installation/configure_sonarqube.yml'
  when: jenkins2_sonarqube_enabled

- include_tasks: '{{ jenkins2_install_type }}_installation/configure_jira.yml'
  when: jenkins2_jira_enabled

- include_tasks: '{{ jenkins2_install_type }}_installation/copy_custom_files.yml'
  when: jenkins2_custom_files_enabled

- include_tasks: '{{ jenkins2_install_type }}_installation/configure_gitlab.yml'
  when: jenkins2_gitlab_enabled

- include_tasks: '{{ jenkins2_install_type }}_installation/add_new_jobs.yml'
  when: jenkins2_seed_job_enable

- include_tasks: '{{ jenkins2_install_type }}_installation/configure_ec2.yml'
  when: jenkins2_ec2_enable

- include_tasks: '{{ jenkins2_install_type }}_installation/configure_ssh_keys.yml'
  when: jenkins2_ssh_keys_slave_group_exist and jenkins2_ssh_keys_generate and
    jenkins_was_installed is defined and jenkins_was_installed is changed

- include_tasks: '{{ jenkins2_install_type }}_installation/configure_security.yml'
  when: jenkins2_security_enable

- name: Disable insecure connection
  set_fact:
    jenkins2_config_http_port: '-1'
  when: jenkins2_http_disabled
